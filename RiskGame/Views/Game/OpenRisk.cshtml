@model RiskGame.Models.GameBattleViewModel
@using RiskGame.Helper
@{
    Layout = "~/Views/Shared/_LayoutGame.cshtml";
    ViewBag.Title = "Open Risk Page";
    //ViewBag.CountDown = DateTime.Now.AddMinutes(5.05);
}
<div class="jumbotron">
    <h2><i class="fa fa-bolt"></i> Open Risk</h2>
    @Html.Partial("_HeaderGameInfo")
    
</div>
<div class="rows col-12">
    <div class="col-md-6">

        <div class="card-header">
            <strong>User Protect Risks</strong>
            <span style="font-size:14px;">Total Cost: @(Model.UserGameRisk.Sum(x => x.RiskOption.ActionEffectValue).GetValueOrDefault().ToString("n0"))</span>
        </div>


        <table class="table">
            <thead>
                <tr>
                    <td><b>RiskName</b></td>
                    <td><b>RiskLevel</b></td>
                    <td><b>Cost</b></td>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.UserGameRisk)
                {
                    <tr>
                        <td>
                            @item.Risk.RiskName
                        </td>
                        <td>
                            @RenderLevel(item.RiskOption.RiskLevel)
                        </td>
                        <td> @item.RiskOption.ActionEffectValue.GetValueOrDefault().ToString("n0")</td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

    <div class="col-md-6">

        <div class="card-header">
            <strong>Game Risks</strong>
            <span style="font-size:14px;">Total Pay: @(Model.UserGameBattleData.Sum(x => x.EffectMoney).ToString("n0"))</span>
        </div>

        <table class="table">
            <thead>
                <tr>
                    <td><b>RiskName</b></td>

                    @*<td><b>ActionEffectValue * Ratio</b></td>*@
                    <td><b>RiskLevel</b></td>
                    <td><b>ActionEffectValue</b></td>
                    <td><b>Ratio</b></td>
                    <td><b>Estimate Pay</b></td>
                    <td><b>ProtectStatus</b></td>
                    <td><b>Actual Pay</b></td>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.UserGameBattleData)
                {
                    <tr>
                        <td>
                            @item.GameBattle.Risk.RiskName
                        </td>

                        @*<td>
                                @(item.GameBattle.ActionEffectValue * item.GameBattle.Ratio)
                            </td>*@
                        <td>
                            @RenderLevel(item.GameBattle.RiskOption.RiskLevel)
                        </td>
                        <td>
                            @item.GameBattle.ActionEffectValue.GetValueOrDefault().ToString("n0")
                        </td>
                        <td>
                            @item.GameBattle.Ratio
                        </td>
                        <td>
                            @((item.GameBattle.ActionEffectValue * item.GameBattle.Ratio).GetValueOrDefault().ToString("n0"))
                        </td>
                        <td>
                            @RenderProtectStatus(item.ProtectStatus)
                        </td>
                        <td>
                            @item.EffectMoney.ToString("n0")
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>
</div>

<br />
<br/>

<div class="rows col-md-12">
    <div class="alert alert-info alert-dismissible" role="alert">
        <strong><i class="fa fa-newspaper-o"></i> Breaking News!</strong>
        <marquee><strong style="">BBC รายงานว่ามีกลุ่ม Hacker ตะวันออกกลางได้ทำการเจาะระบบ Cloud ของ Microsoft และ Amazon คาดว่าข้อมูลของผู้ใช้งานกว่า 5ล้านราย จะมีผลกระทบ</strong></marquee>
    </div>
</div>

<div class="container">
    <div class="content text-center">
        @if (Model.GameDone)
        {
            @Html.ActionLink(" Game Done", "Index", "GameResult", null, new { @class = "btn btn-success", @style = "font-size: x-large;text-align:center;" })
        }
        else
        {
            @Html.ActionLink(" Next Turn", "Index", "Game", null, new { @class = "btn btn-primary", @style = "font-size: x-large;text-align: center;" })
        }
    </div>
</div>

    @helper RenderLevel(int? level)
    {

        if (level == 1)
        {
            <b class="text-danger">@level</b>
        }
        else if (level == 2)
        {
            <b class="text-warning">@level</b>
        }
        else if (level == 3)
        {
            <b class="text-success">@level</b>
        }
        else if (level == 0)
        {
            <b class="text-dark">@level</b>
        }
    }


    @helper RenderProtectStatus(string status)
    {
        if (status.ToUpper().Equals("WIN"))
        {
            <b class="text-success text-lg-center">@status</b>
        }
        else if (status.ToUpper().Equals("DRAW"))
        {
            <b class="text-primary text-lg-center">@status</b>
        }
        else if (status.ToUpper().Equals("LOSE"))
        {
            <b class="text-danger text-lg-center">@status</b>
        }
    }







    @*<div class="jumbotron">
            <h1>Game Start</h1>

            <div id="countdown"></div>

            @using (Html.BeginForm("SendRisk", "Game", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <table class="table">
                    <thead>
                        <tr>
                            <td><b>Name</b></td>
                            <td><b>Level 1</b></td>
                            <td><b>Level 2</b></td>
                            <td><b>Level 3</b></td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            @foreach (var item in Model.RiskData)
                        {
                                <td>
                                    @item.Name
                                </td>
                                foreach (var op in item.RiskOption)
                                {

                                    <td>
                                        @Html.RadioButton("riskoption", op.Money) @Html.Raw("Protect -") @op.Money
                                    </td>
                                }

                            }
                        </tr>
                    </tbody>
                </table>

                <button id="submit" type="submit" class="btn btn-primary">Submit</button>
            }

        </div>

        <script>
            var end = new Date('@ViewBag.CountDown'); // viewbag
                var _second = 1000;
                var _minute = _second * 60;
                var _hour = _minute * 60;
                var _day = _hour * 24;
                var timer;

                function showRemaining() {
                    var now = new Date();
                    var distance = end - now;
                    if (distance < 0) {

                        clearInterval(timer);
                        document.getElementById('countdown').innerHTML = 'EXPIRED!';
                        //go to next page auto
                        $("#submit").click();

                        return;
                    }
                  //  var days = Math.floor(distance / _day);
                  //  var hours = Math.floor((distance % _day) / _hour);
                    var minutes = Math.floor((distance % _hour) / _minute);
                    var seconds = Math.floor((distance % _minute) / _second);

                  //  document.getElementById('countdown').innerHTML = days + 'days ';
                  //  document.getElementById('countdown').innerHTML += hours + 'hrs ';
                    document.getElementById('countdown').innerHTML = minutes + 'mins ';
                    document.getElementById('countdown').innerHTML += seconds + 'secs';
                }
                timer = setInterval(showRemaining, 1000);
        </script>*@
