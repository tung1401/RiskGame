@{
    ViewBag.Title = "Create Room Page";

    // var ob = RiskGame.Helper.Singleton.User();
    var isSinglePlayer = false;
    if (Request.QueryString["player"] != null)
    {
        var player = int.Parse(Request.QueryString["player"]);
        isSinglePlayer = player == 1 ? true : false;
    }

}

<h1 class="text-center">Create Room</h1>
<div>
    <h5>Owner:</h5> <span>@User.Identity.Name</span>
</div>
<br>
@using (Html.BeginForm("AddRoom", "Room", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    if (isSinglePlayer)
    {
        @Html.Hidden("Add.RoomName", $"single-{DateTime.UtcNow.Ticks}", new { @class = "form-control" })
        @Html.Hidden("Add.MultiPlayer", "1", new { @class = "form-control" })

    }

    <div class="row">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <strong class="card-title">Room Info</strong>
                </div>
                <div class="card-body">
                    <div id="CreateRoom">
                        <div class="col-sm-6 col-lg-12">

                            @if (!isSinglePlayer)
                            {
                                <div class="col-lg-6">
                                    <div class="form-group">

                                        @Html.Label("Room Name")
                                        @Html.TextBox("Add.RoomName", "", new { @class = "form-control", required = "required" })

                                    </div>
                                    <div class="form-group">
                                        @Html.Label("Player")<br />
                                        @Html.DropDownList("Add.MultiPlayer", (List<SelectListItem>)ViewBag.SelectMultiPlayer, new { @class = "form-control" })
                                    </div>

                                </div>
                            }
                            <div class="col-lg-6">
                                <div class="form-group">
                                    @Html.Label("Start With Money")
                                    @Html.TextBox("Add.StartMoney", "100000", new { @class = "form-control", type = "number", required = "required", step = "1", min = 1, max = 999999999, maxlength = 10, onkeyup = "changeMoneyHandler(this)" })
                                </div>
                                <div class="form-group">
                                    @Html.Label("Goal")<br />
                                    @Html.DropDownList("Add.Goal", (List<SelectListItem>)ViewBag.SelectGoal, new { @class = "form-control" })
                                </div>
                                <div class="form-group">
                                    <div class="col-lg-9" style="padding: 0;">
                                        @Html.Label("Software Process")
                                        @Html.DropDownList("Add.SoftwareProcessType", (List<SelectListItem>)ViewBag.SelectSoftwareProcessType, new { @class = "form-control" })

                                    </div>
                                    <div class="col-lg-3" style="padding: 0 0 0 10px;">
                                        @Html.Label("Round")
                                        @Html.TextBox("Add.Round", "", new { @class = "form-control", type = "text", required = "required", step = "1", min = 1, max = 10, maxlength = 2, onkeyup = "changeLimitHandler(this)" })
                                    </div>
                                </div>

                                <div class="form-group">
                                </div>
                            </div>
                        </div>
                        <div class="row col-sm-6 col-lg-6">


                        </div>
                        <div class="row text-center col-sm-6 col-lg-12">
                            <br />

                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header">
                    <strong class="card-title">Create Character</strong>
                </div>
                <div class="card-body">

                    <div class="form-group">
                     
                        <div class="col-lg-6" style="padding: 0;">
                            @Html.Label("Player Avartar")

                            @Html.DropDownList("Add.ImageUrl", (List<SelectListItem>)ViewBag.SelectAvartar, new { @class = "form-control", required = "required" })
                        </div>
                        <div class="col-lg-6" style="padding: 0;">
                            <img id="myAvartar" class="align-self-center rounded-circle" style="height: 95px;text-align: center;display: block;margin: 0 auto;" alt="" src="/Content/sufee/images/boy.png">
                        </div>
                       

                    </div>

                    <div class="form-group">
                        @Html.Label("Player Name")
                        @Html.TextBox("Add.PlayerName", "", new { @class = "form-control", required = "required" })
                    </div>
                    <div class="form-group">
                        @Html.Label("Job")
                        @Html.DropDownList("Add.JobType", (List<SelectListItem>)ViewBag.SelectJobType, new { @class = "form-control", required = "required" })
                    </div>

                </div>
            </div>
        </div>
        <div class="col-lg-12 text-center">
            <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-floppy-disk"></span> Create</button>
        </div>
    </div>
}
<br>


<script type="text/javascript">


    $("#Add_ImageUrl").change(function () {
        var imageUrl = $("#Add_ImageUrl").val();

        $("#myAvartar").attr("src", imageUrl);

    });


    function changeMoneyHandler(element) {
        element.value = element.value.replace(/[^0-9]/g, '');
        if (element.value == '' || element.value == 0) {
            element.value = '';
        }
        if (element.value > 999999999) {
            element.value = 999999999;
        }
        if (element.value < 0) {
            element.value = 1;
        }
    }

    function changeLimitHandler(element) {
        element.value = element.value.replace(/[^0-9]/g, '');
        if (element.value == '' || element.value == 0) {
            element.value = '';
        }
        if (element.value > 10) {
            element.value = 10;
        }
        if (element.value < 0) {
            element.value = 1;
        }
    }

</script>
